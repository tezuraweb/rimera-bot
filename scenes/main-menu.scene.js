const { Scenes, Markup } = require('telegraf');

class MainMenuScene {
    constructor() {
        this.keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('üè¢ –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ì—Ä—É–ø–ø–æ–π –∫–æ–º–ø–∞–Ω–∏–π ¬´–†–∏–º–µ—Ä–∞¬ª', '_')],
            [Markup.button.callback('üì∞ –î–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π', '_')],
            [Markup.button.callback('üí° –ü–æ–¥–∞—Ç—å —Ä–∞—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', 'appeal_feature')],
            [Markup.button.callback('‚ö†Ô∏è –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ', 'appeal_problem')],
            [Markup.button.callback('‚úçÔ∏è –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å', 'news')],
            [Markup.button.callback('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã', 'appeal_contacts')],
            [Markup.button.callback('‚ÑπÔ∏è –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', 'faq')],
            [Markup.button.callback('üíº –ù–∞—à–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ ', 'vacancies')],
            [Markup.button.callback('‚ùì –ü–æ–º–æ—â—å', 'help')]
        ]);

        const scene = new Scenes.BaseScene('MAIN_MENU_SCENE');
        
        scene.enter(this.showMainMenu.bind(this));
        scene.action('news', ctx => ctx.scene.enter('ADD_NEWS_SCENE'));
        scene.action('faq', ctx => ctx.scene.enter('FAQ_SCENE'));
        scene.action('vacancies', ctx => ctx.scene.enter('VACANCY_SCENE'));
        scene.action('help', this.showHelp.bind(this));
        scene.action('appeal_feature', ctx => {
            ctx.session.direction = 'appeal_feature';
            ctx.scene.enter('APPEAL_SCENE')
        });
        scene.action('appeal_problem', ctx => {
            ctx.session.direction = 'appeal_problem';
            ctx.scene.enter('APPEAL_SCENE')
        });
        scene.action('appeal_contacts', ctx => {
            ctx.session.direction = 'appeal_contacts';
            ctx.scene.enter('APPEAL_SCENE')
        });

        return scene;
    }

    async showMainMenu(ctx) {
        await ctx.reply(
            `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:`,
            this.keyboard
        );
    }

    async showHelp(ctx) {
        const helpText = `
üì± –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:

/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
üì∞ –ù–æ–≤–æ—Å—Ç–∏ - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏
üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é - –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É.
        `.trim();

        await ctx.reply(helpText, this.keyboard);
    }
}

module.exports = MainMenuScene;
