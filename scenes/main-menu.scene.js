const { Scenes, Markup } = require('telegraf');

class MainMenuScene {
    constructor() {
        this.keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('üì∞ –ù–æ–≤–æ—Å—Ç–∏', 'news')],
            [Markup.button.callback('üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', 'feedback')],
            [Markup.button.callback('üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é', 'appeal')],
            [Markup.button.callback('‚ùì –ü–æ–º–æ—â—å', 'help')]
        ]);

        const scene = new Scenes.BaseScene('MAIN_MENU_SCENE');
        
        scene.enter(this.showMainMenu.bind(this));
        scene.action('news', ctx => ctx.scene.enter('ADD_NEWS_SCENE'));
        scene.action('feedback', ctx => ctx.scene.enter('FEEDBACK_SCENE'));
        scene.action('appeal', ctx => ctx.scene.enter('APPEAL_SCENE'));
        scene.action('help', this.showHelp.bind(this));

        return scene;
    }

    async showMainMenu(ctx) {
        await ctx.reply(
            `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:`,
            this.keyboard
        );
    }

    async showHelp(ctx) {
        const helpText = `
üì± –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:

/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
üì∞ –ù–æ–≤–æ—Å—Ç–∏ - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏
üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é - –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É.
        `.trim();

        await ctx.reply(helpText, this.keyboard);
    }
}

module.exports = MainMenuScene;
